token literal names:
null
null
null
null
null
null
null
null
null
null
null
null
null
'Body'
'Break'
'Continue'
'Do'
'Else'
'ElSelf'
'ElseIf'
'EndIf'
'EndFor'
'EndWhile'
'For'
'Function'
'If'
'Parameter'
'Return'
'Then'
'Var'
'While'
'True'
'False'
'EndDo'
'+'
'+.'
'-'
'-.'
'*'
'*.'
'\\'
'\\.'
'%'
'!'
'&&'
'||'
'=='
'!='
'<'
'>'
'<='
'>='
'=\\='
'<.'
'>.'
'<=.'
'>=.'
'('
')'
'['
']'
'{'
'}'
':'
'.'
';'
','
'='

token symbolic names:
null
INT_ARRAY
ID
ILLEGAL_ESCAPE
UNCLOSE_STRING
COMMENT
UNTERMINATED_COMMENT
ERROR_CHAR
WS
Integer_literal
Float_literal
Boolean_literal
String_literal
BODY
BREAK
CONTINUE
DO
ELSE
ELSELF
ELSEIF
ENDBODY
ENDFOR
ENDWHILE
FOR
FUNCTION
IF
PARAMETER
RETURN
THEN
VAR
WHILE
TRUE
FALSE
ENDDO
PLUS_INT
PLUS_FLOAT
MINUS_INT
MINUS_FLOAT
STAR_INT
STAR_FLOAT
DIV_INT
DIV_FLOAT
MOD
NOT
AND
OR
EQUAL
NOT_EQUAL_INT
LESS_INT
GREATER_INT
LESS_OR_EQUAL_INT
GREATER_OR_EQUAL_INT
NOT_EQUAL_FLOAT
LESS_FLOAT
GREATER_FLOAT
LESS_OR_EQUAL_FLOAT
GREATER_OR_EQUAL_FLOAT
LEFT_PAREN
RIGHT_PARENT
LEFT_BRACKET
RIGHT_BRACKET
LEFT_BRACE
RIGHT_BRACE
COLON
DOT
SEMI
COMMA
ASSIGN

rule names:
program
var_declare
function_declare
primitive_type
composite_type
array
bool_op
int_op
float_op
if_stmt
while_stmt
dowhile_stmt


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 69, 65, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 4, 13, 9, 13, 3, 2, 3, 2, 6, 2, 29, 10, 2, 13, 2, 14, 2, 30, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 2, 2, 14, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 2, 6, 3, 2, 11, 14, 3, 2, 45, 47, 8, 2, 36, 36, 38, 38, 40, 40, 42, 42, 44, 44, 48, 53, 7, 2, 37, 37, 39, 39, 41, 41, 43, 43, 54, 58, 2, 54, 2, 28, 3, 2, 2, 2, 4, 34, 3, 2, 2, 2, 6, 37, 3, 2, 2, 2, 8, 46, 3, 2, 2, 2, 10, 48, 3, 2, 2, 2, 12, 50, 3, 2, 2, 2, 14, 52, 3, 2, 2, 2, 16, 54, 3, 2, 2, 2, 18, 56, 3, 2, 2, 2, 20, 58, 3, 2, 2, 2, 22, 60, 3, 2, 2, 2, 24, 62, 3, 2, 2, 2, 26, 29, 5, 4, 3, 2, 27, 29, 5, 6, 4, 2, 28, 26, 3, 2, 2, 2, 28, 27, 3, 2, 2, 2, 29, 30, 3, 2, 2, 2, 30, 28, 3, 2, 2, 2, 30, 31, 3, 2, 2, 2, 31, 32, 3, 2, 2, 2, 32, 33, 7, 2, 2, 3, 33, 3, 3, 2, 2, 2, 34, 35, 7, 31, 2, 2, 35, 36, 7, 67, 2, 2, 36, 5, 3, 2, 2, 2, 37, 38, 7, 26, 2, 2, 38, 39, 7, 65, 2, 2, 39, 40, 7, 4, 2, 2, 40, 41, 7, 28, 2, 2, 41, 42, 7, 15, 2, 2, 42, 43, 7, 65, 2, 2, 43, 44, 7, 22, 2, 2, 44, 45, 7, 66, 2, 2, 45, 7, 3, 2, 2, 2, 46, 47, 9, 2, 2, 2, 47, 9, 3, 2, 2, 2, 48, 49, 5, 12, 7, 2, 49, 11, 3, 2, 2, 2, 50, 51, 3, 2, 2, 2, 51, 13, 3, 2, 2, 2, 52, 53, 9, 3, 2, 2, 53, 15, 3, 2, 2, 2, 54, 55, 9, 4, 2, 2, 55, 17, 3, 2, 2, 2, 56, 57, 9, 5, 2, 2, 57, 19, 3, 2, 2, 2, 58, 59, 3, 2, 2, 2, 59, 21, 3, 2, 2, 2, 60, 61, 3, 2, 2, 2, 61, 23, 3, 2, 2, 2, 62, 63, 3, 2, 2, 2, 63, 25, 3, 2, 2, 2, 4, 28, 30]